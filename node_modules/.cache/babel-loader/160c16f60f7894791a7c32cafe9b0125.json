{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useTranslate, useChoices } from 'ra-core';\nimport ResettableTextField from './ResettableTextField';\nimport InputHelperText from './InputHelperText';\n\nvar sanitizeRestProps = function (_a) {\n  var addLabel = _a.addLabel,\n      allowEmpty = _a.allowEmpty,\n      alwaysOn = _a.alwaysOn,\n      emptyValue = _a.emptyValue,\n      basePath = _a.basePath,\n      choices = _a.choices,\n      className = _a.className,\n      component = _a.component,\n      crudGetMatching = _a.crudGetMatching,\n      crudGetOne = _a.crudGetOne,\n      defaultValue = _a.defaultValue,\n      filter = _a.filter,\n      filterToQuery = _a.filterToQuery,\n      formClassName = _a.formClassName,\n      initializeForm = _a.initializeForm,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      locale = _a.locale,\n      meta = _a.meta,\n      onChange = _a.onChange,\n      options = _a.options,\n      optionValue = _a.optionValue,\n      optionText = _a.optionText,\n      disableValue = _a.disableValue,\n      perPage = _a.perPage,\n      record = _a.record,\n      reference = _a.reference,\n      resource = _a.resource,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      sort = _a.sort,\n      source = _a.source,\n      textAlign = _a.textAlign,\n      translate = _a.translate,\n      translateChoice = _a.translateChoice,\n      validation = _a.validation,\n      rest = __rest(_a, [\"addLabel\", \"allowEmpty\", \"alwaysOn\", \"emptyValue\", \"basePath\", \"choices\", \"className\", \"component\", \"crudGetMatching\", \"crudGetOne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"onChange\", \"options\", \"optionValue\", \"optionText\", \"disableValue\", \"perPage\", \"record\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n\n  return rest;\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    input: {\n      minWidth: theme.spacing(20)\n    }\n  };\n}, {\n  name: 'RaSelectInput'\n});\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\n\nvar SelectInput = function (_a) {\n  var allowEmpty = _a.allowEmpty,\n      _b = _a.choices,\n      choices = _b === void 0 ? [] : _b,\n      className = _a.className,\n      disableValue = _a.disableValue,\n      emptyText = _a.emptyText,\n      emptyValue = _a.emptyValue,\n      format = _a.format,\n      helperText = _a.helperText,\n      label = _a.label,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      onFocus = _a.onFocus,\n      options = _a.options,\n      optionText = _a.optionText,\n      optionValue = _a.optionValue,\n      parse = _a.parse,\n      resource = _a.resource,\n      source = _a.source,\n      translateChoice = _a.translateChoice,\n      validate = _a.validate,\n      rest = __rest(_a, [\"allowEmpty\", \"choices\", \"className\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"helperText\", \"label\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]);\n\n  var translate = useTranslate();\n  var classes = useStyles({});\n\n  var _c = useChoices({\n    optionText: optionText,\n    optionValue: optionValue,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _c.getChoiceText,\n      getChoiceValue = _c.getChoiceValue;\n\n  var _d = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _d.id,\n      input = _d.input,\n      isRequired = _d.isRequired,\n      _e = _d.meta,\n      error = _e.error,\n      touched = _e.touched;\n\n  var renderEmptyItemOption = useCallback(function () {\n    return React.isValidElement(emptyText) ? React.cloneElement(emptyText) : translate(emptyText, {\n      _: emptyText\n    });\n  }, [emptyText, translate]);\n  var renderMenuItemOption = useCallback(function (choice) {\n    return getChoiceText(choice);\n  }, [getChoiceText]);\n  return React.createElement(ResettableTextField, __assign({\n    id: id\n  }, input, {\n    select: true,\n    label: label !== '' && label !== false && React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    className: classes.input + \" \" + className,\n    clearAlwaysVisible: true,\n    error: !!(touched && error),\n    helperText: touched && error || helperText ? React.createElement(InputHelperText, {\n      touched: touched,\n      error: error,\n      helperText: helperText\n    }) : null\n  }, options, sanitizeRestProps(rest)), allowEmpty ? React.createElement(MenuItem, {\n    value: emptyValue,\n    key: \"null\",\n    \"aria-label\": translate('ra.action.clear_input_value'),\n    title: translate('ra.action.clear_input_value')\n  }, renderEmptyItemOption()) : null, choices.map(function (choice) {\n    return React.createElement(MenuItem, {\n      key: getChoiceValue(choice),\n      value: getChoiceValue(choice),\n      disabled: get(choice, disableValue)\n    }, renderMenuItemOption(choice));\n  }));\n};\n\nSelectInput.propTypes = {\n  allowEmpty: PropTypes.bool.isRequired,\n  emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  emptyValue: PropTypes.any,\n  choices: PropTypes.arrayOf(PropTypes.object),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]).isRequired,\n  optionValue: PropTypes.string.isRequired,\n  disableValue: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nSelectInput.defaultProps = {\n  allowEmpty: false,\n  emptyText: '',\n  emptyValue: '',\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  translateChoice: true,\n  disableValue: 'disabled'\n};\nexport default SelectInput;","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/node_modules/ra-ui-materialui/esm/input/SelectInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useCallback","PropTypes","get","MenuItem","makeStyles","useInput","FieldTitle","useTranslate","useChoices","ResettableTextField","InputHelperText","sanitizeRestProps","_a","addLabel","allowEmpty","alwaysOn","emptyValue","basePath","choices","className","component","crudGetMatching","crudGetOne","defaultValue","filter","filterToQuery","formClassName","initializeForm","input","isRequired","label","locale","meta","onChange","options","optionValue","optionText","disableValue","perPage","record","reference","resource","setFilter","setPagination","setSort","sort","source","textAlign","translate","translateChoice","validation","rest","useStyles","theme","minWidth","spacing","name","SelectInput","_b","emptyText","format","helperText","onBlur","onFocus","parse","validate","classes","_c","getChoiceText","getChoiceValue","_d","id","_e","error","touched","renderEmptyItemOption","isValidElement","cloneElement","_","renderMenuItemOption","choice","createElement","select","clearAlwaysVisible","value","key","title","map","disabled","propTypes","bool","oneOfType","string","element","any","arrayOf","object","func","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useTranslate, useChoices, } from 'ra-core';\nimport ResettableTextField from './ResettableTextField';\nimport InputHelperText from './InputHelperText';\nvar sanitizeRestProps = function (_a) {\n    var addLabel = _a.addLabel, allowEmpty = _a.allowEmpty, alwaysOn = _a.alwaysOn, emptyValue = _a.emptyValue, basePath = _a.basePath, choices = _a.choices, className = _a.className, component = _a.component, crudGetMatching = _a.crudGetMatching, crudGetOne = _a.crudGetOne, defaultValue = _a.defaultValue, filter = _a.filter, filterToQuery = _a.filterToQuery, formClassName = _a.formClassName, initializeForm = _a.initializeForm, input = _a.input, isRequired = _a.isRequired, label = _a.label, locale = _a.locale, meta = _a.meta, onChange = _a.onChange, options = _a.options, optionValue = _a.optionValue, optionText = _a.optionText, disableValue = _a.disableValue, perPage = _a.perPage, record = _a.record, reference = _a.reference, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, sort = _a.sort, source = _a.source, textAlign = _a.textAlign, translate = _a.translate, translateChoice = _a.translateChoice, validation = _a.validation, rest = __rest(_a, [\"addLabel\", \"allowEmpty\", \"alwaysOn\", \"emptyValue\", \"basePath\", \"choices\", \"className\", \"component\", \"crudGetMatching\", \"crudGetOne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"onChange\", \"options\", \"optionValue\", \"optionText\", \"disableValue\", \"perPage\", \"record\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n    return rest;\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    input: {\n        minWidth: theme.spacing(20),\n    },\n}); }, { name: 'RaSelectInput' });\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\nvar SelectInput = function (_a) {\n    var allowEmpty = _a.allowEmpty, _b = _a.choices, choices = _b === void 0 ? [] : _b, className = _a.className, disableValue = _a.disableValue, emptyText = _a.emptyText, emptyValue = _a.emptyValue, format = _a.format, helperText = _a.helperText, label = _a.label, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, options = _a.options, optionText = _a.optionText, optionValue = _a.optionValue, parse = _a.parse, resource = _a.resource, source = _a.source, translateChoice = _a.translateChoice, validate = _a.validate, rest = __rest(_a, [\"allowEmpty\", \"choices\", \"className\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"helperText\", \"label\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]);\n    var translate = useTranslate();\n    var classes = useStyles({});\n    var _c = useChoices({\n        optionText: optionText,\n        optionValue: optionValue,\n        translateChoice: translateChoice,\n    }), getChoiceText = _c.getChoiceText, getChoiceValue = _c.getChoiceValue;\n    var _d = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), id = _d.id, input = _d.input, isRequired = _d.isRequired, _e = _d.meta, error = _e.error, touched = _e.touched;\n    var renderEmptyItemOption = useCallback(function () {\n        return React.isValidElement(emptyText)\n            ? React.cloneElement(emptyText)\n            : translate(emptyText, { _: emptyText });\n    }, [emptyText, translate]);\n    var renderMenuItemOption = useCallback(function (choice) { return getChoiceText(choice); }, [\n        getChoiceText,\n    ]);\n    return (React.createElement(ResettableTextField, __assign({ id: id }, input, { select: true, label: label !== '' &&\n            label !== false && (React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })), className: classes.input + \" \" + className, clearAlwaysVisible: true, error: !!(touched && error), helperText: (touched && error) || helperText ? (React.createElement(InputHelperText, { touched: touched, error: error, helperText: helperText })) : null }, options, sanitizeRestProps(rest)),\n        allowEmpty ? (React.createElement(MenuItem, { value: emptyValue, key: \"null\", \"aria-label\": translate('ra.action.clear_input_value'), title: translate('ra.action.clear_input_value') }, renderEmptyItemOption())) : null,\n        choices.map(function (choice) { return (React.createElement(MenuItem, { key: getChoiceValue(choice), value: getChoiceValue(choice), disabled: get(choice, disableValue) }, renderMenuItemOption(choice))); })));\n};\nSelectInput.propTypes = {\n    allowEmpty: PropTypes.bool.isRequired,\n    emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    emptyValue: PropTypes.any,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    disableValue: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nSelectInput.defaultProps = {\n    allowEmpty: false,\n    emptyText: '',\n    emptyValue: '',\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n    disableValue: 'disabled',\n};\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}