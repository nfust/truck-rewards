{"ast":null,"code":"import convertLegacyDataProvider from './convertLegacyDataProvider';\nimport DataProviderContext from './DataProviderContext';\nimport HttpError from './HttpError';\nimport * as fetchUtils from './fetch';\nimport Mutation from './Mutation';\nimport Query from './Query';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport useDataProvider from './useDataProvider';\nimport useMutation from './useMutation';\nimport useQuery from './useQuery';\nimport useQueryWithStore from './useQueryWithStore';\nimport withDataProvider from './withDataProvider';\nimport useGetOne from './useGetOne';\nimport useGetList from './useGetList';\nimport useGetMany from './useGetMany';\nimport useGetManyReference from './useGetManyReference';\nimport useGetMatching from './useGetMatching';\nimport useUpdate from './useUpdate';\nimport useUpdateMany from './useUpdateMany';\nimport useCreate from './useCreate';\nimport useDelete from './useDelete';\nimport useDeleteMany from './useDeleteMany';\nexport { convertLegacyDataProvider, DataProviderContext, fetchUtils, HttpError, Mutation, Query, undoableEventEmitter, useDataProvider, useMutation, useQuery, useGetOne, useGetList, useGetMany, useGetManyReference, useGetMatching, useUpdate, useUpdateMany, useCreate, useDelete, useDeleteMany, useQueryWithStore, withDataProvider };","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/node_modules/ra-core/esm/dataProvider/index.js"],"names":["convertLegacyDataProvider","DataProviderContext","HttpError","fetchUtils","Mutation","Query","undoableEventEmitter","useDataProvider","useMutation","useQuery","useQueryWithStore","withDataProvider","useGetOne","useGetList","useGetMany","useGetManyReference","useGetMatching","useUpdate","useUpdateMany","useCreate","useDelete","useDeleteMany"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASrB,yBAAT,EAAoCC,mBAApC,EAAyDE,UAAzD,EAAqED,SAArE,EAAgFE,QAAhF,EAA0FC,KAA1F,EAAiGC,oBAAjG,EAAuHC,eAAvH,EAAwIC,WAAxI,EAAqJC,QAArJ,EAA+JG,SAA/J,EAA0KC,UAA1K,EAAsLC,UAAtL,EAAkMC,mBAAlM,EAAuNC,cAAvN,EAAuOC,SAAvO,EAAkPC,aAAlP,EAAiQC,SAAjQ,EAA4QC,SAA5Q,EAAuRC,aAAvR,EAAsSX,iBAAtS,EAAyTC,gBAAzT","sourcesContent":["import convertLegacyDataProvider from './convertLegacyDataProvider';\nimport DataProviderContext from './DataProviderContext';\nimport HttpError from './HttpError';\nimport * as fetchUtils from './fetch';\nimport Mutation from './Mutation';\nimport Query from './Query';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport useDataProvider from './useDataProvider';\nimport useMutation from './useMutation';\nimport useQuery from './useQuery';\nimport useQueryWithStore from './useQueryWithStore';\nimport withDataProvider from './withDataProvider';\nimport useGetOne from './useGetOne';\nimport useGetList from './useGetList';\nimport useGetMany from './useGetMany';\nimport useGetManyReference from './useGetManyReference';\nimport useGetMatching from './useGetMatching';\nimport useUpdate from './useUpdate';\nimport useUpdateMany from './useUpdateMany';\nimport useCreate from './useCreate';\nimport useDelete from './useDelete';\nimport useDeleteMany from './useDeleteMany';\nexport { convertLegacyDataProvider, DataProviderContext, fetchUtils, HttpError, Mutation, Query, undoableEventEmitter, useDataProvider, useMutation, useQuery, useGetOne, useGetList, useGetMany, useGetManyReference, useGetMatching, useUpdate, useUpdateMany, useCreate, useDelete, useDeleteMany, useQueryWithStore, withDataProvider, };\n"]},"metadata":{},"sourceType":"module"}