{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\nimport { useHistory } from 'react-router-dom';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, is, data) => ...)\n */\n\nvar useRedirect = function () {\n  var dispatch = useDispatch();\n  var history = useHistory();\n  return useCallback(function (redirectTo, basePath, id, data) {\n    if (basePath === void 0) {\n      basePath = '';\n    }\n\n    if (!redirectTo) {\n      dispatch(refreshView());\n      return;\n    }\n\n    history.push(resolveRedirectTo(redirectTo, basePath, id, data));\n  }, [dispatch, history]);\n};\n\nexport default useRedirect;","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/node_modules/ra-core/esm/sideEffect/useRedirect.js"],"names":["useCallback","useDispatch","resolveRedirectTo","refreshView","useHistory","useRedirect","dispatch","history","redirectTo","basePath","id","data","push"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;;;;;;;;;;;;;;;;AAeA,IAAIC,WAAW,GAAG,YAAY;AAC1B,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAIM,OAAO,GAAGH,UAAU,EAAxB;AACA,SAAOJ,WAAW,CAAC,UAAUQ,UAAV,EAAsBC,QAAtB,EAAgCC,EAAhC,EAAoCC,IAApC,EAA0C;AACzD,QAAIF,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,EAAX;AAAgB;;AAC3C,QAAI,CAACD,UAAL,EAAiB;AACbF,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACA;AACH;;AACDI,IAAAA,OAAO,CAACK,IAAR,CAAaV,iBAAiB,CAACM,UAAD,EAAaC,QAAb,EAAuBC,EAAvB,EAA2BC,IAA3B,CAA9B;AACH,GAPiB,EAOf,CAACL,QAAD,EAAWC,OAAX,CAPe,CAAlB;AAQH,CAXD;;AAYA,eAAeF,WAAf","sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\nimport { useHistory } from 'react-router-dom';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, is, data) => ...)\n */\nvar useRedirect = function () {\n    var dispatch = useDispatch();\n    var history = useHistory();\n    return useCallback(function (redirectTo, basePath, id, data) {\n        if (basePath === void 0) { basePath = ''; }\n        if (!redirectTo) {\n            dispatch(refreshView());\n            return;\n        }\n        history.push(resolveRedirectTo(redirectTo, basePath, id, data));\n    }, [dispatch, history]);\n};\nexport default useRedirect;\n"]},"metadata":{},"sourceType":"module"}