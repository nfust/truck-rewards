{"ast":null,"code":"// in src/authProvider.js\nimport { AUTH_LOGIN, AUTH_CHECK, AUTH_LOGOUT, AUTH_ERROR } from 'react-admin';\nexport default ((type, params) => {\n  if (type === AUTH_LOGIN) {\n    const username = params.username,\n          password = params.password;\n    localStorage.setItem(\"authString\", btoa(`${username}:${password}`));\n  }\n\n  if (type == AUTH_CHECK) {\n    return localStorage.getItem('authString') ? Promise.resolve() : Promise.reject();\n  }\n\n  if (type == AUTH_LOGOUT) {\n    localStorage.removeItem('authString');\n    return Promise.resolve();\n  }\n\n  if (type == AUTH_ERROR) {\n    const status = params.status;\n\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('authString');\n      return Promise.reject();\n    }\n  }\n\n  return Promise.resolve();\n});","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/src/authProvider.js"],"names":["AUTH_LOGIN","AUTH_CHECK","AUTH_LOGOUT","AUTH_ERROR","type","params","username","password","localStorage","setItem","btoa","getItem","Promise","resolve","reject","removeItem","status"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,UAArB,EAAgCC,WAAhC,EAA4CC,UAA5C,QAA8D,aAA9D;AACA,gBAAe,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,MAAID,IAAI,KAAKJ,UAAb,EAAyB;AAAA,UACbM,QADa,GACUD,MADV,CACbC,QADa;AAAA,UACHC,QADG,GACUF,MADV,CACHE,QADG;AAErBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAAE,GAAEJ,QAAS,IAAGC,QAAS,EAAzB,CAAvC;AACH;;AACG,MAAGH,IAAI,IAAIH,UAAX,EAAsB;AACd,WAAOO,YAAY,CAACG,OAAb,CAAqB,YAArB,IAAqCC,OAAO,CAACC,OAAR,EAArC,GAAyDD,OAAO,CAACE,MAAR,EAAhE;AACP;;AAER,MAAGV,IAAI,IAAIF,WAAX,EAAuB;AACtBM,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACO,WAAOH,OAAO,CAACC,OAAR,EAAP;AACP;;AAED,MAAGT,IAAI,IAAID,UAAX,EAAsB;AAAA,UACPa,MADO,GACGX,MADH,CACPW,MADO;;AAEd,QAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACjCR,MAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACA,aAAOH,OAAO,CAACE,MAAR,EAAP;AACX;AACM;;AAEJ,SAAOF,OAAO,CAACC,OAAR,EAAP;AACJ,CAvBD","sourcesContent":["// in src/authProvider.js\nimport { AUTH_LOGIN, AUTH_CHECK,AUTH_LOGOUT,AUTH_ERROR,} from 'react-admin';\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        localStorage.setItem(\"authString\", btoa(`${username}:${password}`));\n    }\n        if(type == AUTH_CHECK){\n                return localStorage.getItem('authString') ? Promise.resolve() : Promise.reject();\n        }\n\n\tif(type == AUTH_LOGOUT){\n\t\tlocalStorage.removeItem('authString');\n        \treturn Promise.resolve();\n\t}\n\n\tif(type == AUTH_ERROR){\n        \tconst {status} = params;\n        \tif (status === 401 || status === 403) {\n            \t\tlocalStorage.removeItem('authString');\n            \t\treturn Promise.reject();\n\t\t}\n        }\n\n    \treturn Promise.resolve();\n}\n\n"]},"metadata":{},"sourceType":"module"}