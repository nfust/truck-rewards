{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useContext, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DataProviderContext from './DataProviderContext';\nimport validateResponseFormat from './validateResponseFormat';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport getFetchType from './getFetchType';\nimport defaultDataProvider from './defaultDataProvider';\nimport { startOptimisticMode, stopOptimisticMode } from '../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START } from '../actions/fetchActions';\nimport { showNotification } from '../actions/notificationActions';\nimport { refreshView } from '../actions/uiActions';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied';\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object, which\n * dispatches Redux actions along the process. The benefit is that react-admin\n * tracks the loading state when using this hook, and stores results in the\n * Redux store for future use.\n *\n * In addition to the 2 usual parameters of the dataProvider methods (resource,\n * payload), the Proxy supports a third parameter for every call. It's an\n * object literal which may contain side effects, or make the action optimistic\n * (with undoable: true).\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import React, { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     }\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n *\n * @example Action customization\n *\n * dataProvider.getOne('users', { id: 123 });\n * // will dispatch the following actions:\n * // - CUSTOM_FETCH\n * // - CUSTOM_FETCH_LOADING\n * // - FETCH_START\n * // - CUSTOM_FETCH_SUCCESS\n * // - FETCH_END\n *\n * dataProvider.getOne('users', { id: 123 }, { action: CRUD_GET_ONE });\n * // will dispatch the following actions:\n * // - CRUD_GET_ONE\n * // - CRUD_GET_ONE_LOADING\n * // - FETCH_START\n * // - CRUD_GET_ONE_SUCCESS\n * // - FETCH_END\n */\n\nvar useDataProvider = function () {\n  var dispatch = useDispatch();\n  var dataProvider = useContext(DataProviderContext) || defaultDataProvider;\n  var isOptimistic = useSelector(function (state) {\n    return state.admin.ui.optimistic;\n  });\n  var logoutIfAccessDenied = useLogoutIfAccessDenied();\n  var dataProviderProxy = useMemo(function () {\n    return new Proxy(dataProvider, {\n      get: function (target, name) {\n        return function (resource, payload, options) {\n          var type = name.toString();\n\n          var _a = options || {},\n              _b = _a.action,\n              action = _b === void 0 ? 'CUSTOM_FETCH' : _b,\n              _c = _a.undoable,\n              undoable = _c === void 0 ? false : _c,\n              _d = _a.onSuccess,\n              onSuccess = _d === void 0 ? undefined : _d,\n              _e = _a.onFailure,\n              onFailure = _e === void 0 ? undefined : _e,\n              rest = __rest(_a, [\"action\", \"undoable\", \"onSuccess\", \"onFailure\"]);\n\n          if (typeof dataProvider[type] !== 'function') {\n            throw new Error(\"Unknown dataProvider function: \" + type);\n          }\n\n          if (onSuccess && typeof onSuccess !== 'function') {\n            throw new Error('The onSuccess option must be a function');\n          }\n\n          if (onFailure && typeof onFailure !== 'function') {\n            throw new Error('The onFailure option must be a function');\n          }\n\n          if (undoable && !onSuccess) {\n            throw new Error('You must pass an onSuccess callback calling notify() to use the undoable mode');\n          }\n\n          if (isOptimistic) {\n            // in optimistic mode, all fetch actions are canceled,\n            // so the admin uses the store without synchronization\n            return Promise.resolve();\n          }\n\n          var params = {\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied\n          };\n          return undoable ? performUndoableQuery(params) : performQuery(params);\n        };\n      }\n    });\n  }, [dataProvider, dispatch, isOptimistic, logoutIfAccessDenied]);\n  return dataProviderProxy;\n};\n/**\n * In undoable mode, the hook dispatches an optimistic action and executes\n * the success side effects right away. Then it waits for a few seconds to\n * actually call the dataProvider - unless the user dispatches an Undo action.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\n\n\nvar performUndoableQuery = function (_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied;\n  dispatch(startOptimisticMode());\n\n  if (window) {\n    window.addEventListener('beforeunload', warnBeforeClosingWindow);\n  }\n\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: action + \"_OPTIMISTIC\",\n    payload: payload,\n    meta: {\n      resource: resource,\n      fetch: getFetchType(type),\n      optimistic: true\n    }\n  });\n  onSuccess && onSuccess({});\n  undoableEventEmitter.once('end', function (_a) {\n    var isUndo = _a.isUndo;\n    dispatch(stopOptimisticMode());\n\n    if (isUndo) {\n      dispatch(showNotification('ra.notification.canceled'));\n      dispatch(refreshView());\n\n      if (window) {\n        window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n      }\n\n      return;\n    }\n\n    dispatch({\n      type: action + \"_LOADING\",\n      payload: payload,\n      meta: __assign({\n        resource: resource\n      }, rest)\n    });\n    dispatch({\n      type: FETCH_START\n    });\n    dataProvider[type](resource, payload).then(function (response) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateResponseFormat(response, type);\n      }\n\n      dispatch({\n        type: action + \"_SUCCESS\",\n        payload: response,\n        requestPayload: payload,\n        meta: __assign({}, rest, {\n          resource: resource,\n          fetchResponse: getFetchType(type),\n          fetchStatus: FETCH_END\n        })\n      });\n      dispatch({\n        type: FETCH_END\n      });\n\n      if (window) {\n        window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n      }\n\n      dispatch(refreshView());\n    }).catch(function (error) {\n      if (window) {\n        window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n      }\n\n      return logoutIfAccessDenied(error).then(function (loggedOut) {\n        if (loggedOut) return;\n        dispatch({\n          type: action + \"_FAILURE\",\n          error: error.message ? error.message : error,\n          payload: error.body ? error.body : null,\n          requestPayload: payload,\n          meta: __assign({}, rest, {\n            resource: resource,\n            fetchResponse: getFetchType(type),\n            fetchStatus: FETCH_ERROR\n          })\n        });\n        dispatch({\n          type: FETCH_ERROR,\n          error: error\n        });\n        onFailure && onFailure(error);\n        throw error;\n      });\n    });\n  });\n  return Promise.resolve({});\n}; // event listener added as window.onbeforeunload when starting optimistic mode, and removed when it ends\n\n\nvar warnBeforeClosingWindow = function (event) {\n  event.preventDefault(); // standard\n\n  event.returnValue = ''; // Chrome\n\n  return 'Your latest modifications are not yet sent to the server. Are you sure?'; // Old IE\n};\n/**\n * In normal mode, the hook calls the dataProvider. When a successful response\n * arrives, the hook dispatches a SUCCESS action, executes success side effects\n * and returns the response. If the response is an error, the hook dispatches\n * a FAILURE action, executes failure side effects, and throws an error.\n */\n\n\nvar performQuery = function (_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied;\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: action + \"_LOADING\",\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: FETCH_START\n  });\n  return dataProvider[type](resource, payload).then(function (response) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateResponseFormat(response, type);\n    }\n\n    dispatch({\n      type: action + \"_SUCCESS\",\n      payload: response,\n      requestPayload: payload,\n      meta: __assign({}, rest, {\n        resource: resource,\n        fetchResponse: getFetchType(type),\n        fetchStatus: FETCH_END\n      })\n    });\n    dispatch({\n      type: FETCH_END\n    });\n    onSuccess && onSuccess(response);\n    return response;\n  }).catch(function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(error);\n    }\n\n    return logoutIfAccessDenied(error).then(function (loggedOut) {\n      if (loggedOut) return;\n      dispatch({\n        type: action + \"_FAILURE\",\n        error: error.message ? error.message : error,\n        payload: error.body ? error.body : null,\n        requestPayload: payload,\n        meta: __assign({}, rest, {\n          resource: resource,\n          fetchResponse: getFetchType(type),\n          fetchStatus: FETCH_ERROR\n        })\n      });\n      dispatch({\n        type: FETCH_ERROR,\n        error: error\n      });\n      onFailure && onFailure(error);\n      throw error;\n    });\n  });\n};\n\nexport default useDataProvider;","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/node_modules/ra-core/esm/dataProvider/useDataProvider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useContext","useMemo","useDispatch","useSelector","DataProviderContext","validateResponseFormat","undoableEventEmitter","getFetchType","defaultDataProvider","startOptimisticMode","stopOptimisticMode","FETCH_END","FETCH_ERROR","FETCH_START","showNotification","refreshView","useLogoutIfAccessDenied","useDataProvider","dispatch","dataProvider","isOptimistic","state","admin","ui","optimistic","logoutIfAccessDenied","dataProviderProxy","Proxy","get","target","name","resource","payload","options","type","toString","_a","_b","action","_c","undoable","_d","onSuccess","undefined","_e","onFailure","rest","Error","Promise","resolve","params","performUndoableQuery","performQuery","window","addEventListener","warnBeforeClosingWindow","meta","fetch","once","isUndo","removeEventListener","then","response","process","env","NODE_ENV","requestPayload","fetchResponse","fetchStatus","catch","error","console","loggedOut","message","body","event","preventDefault","returnValue"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useContext, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DataProviderContext from './DataProviderContext';\nimport validateResponseFormat from './validateResponseFormat';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport getFetchType from './getFetchType';\nimport defaultDataProvider from './defaultDataProvider';\nimport { startOptimisticMode, stopOptimisticMode, } from '../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START } from '../actions/fetchActions';\nimport { showNotification } from '../actions/notificationActions';\nimport { refreshView } from '../actions/uiActions';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied';\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object, which\n * dispatches Redux actions along the process. The benefit is that react-admin\n * tracks the loading state when using this hook, and stores results in the\n * Redux store for future use.\n *\n * In addition to the 2 usual parameters of the dataProvider methods (resource,\n * payload), the Proxy supports a third parameter for every call. It's an\n * object literal which may contain side effects, or make the action optimistic\n * (with undoable: true).\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import React, { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     }\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n *\n * @example Action customization\n *\n * dataProvider.getOne('users', { id: 123 });\n * // will dispatch the following actions:\n * // - CUSTOM_FETCH\n * // - CUSTOM_FETCH_LOADING\n * // - FETCH_START\n * // - CUSTOM_FETCH_SUCCESS\n * // - FETCH_END\n *\n * dataProvider.getOne('users', { id: 123 }, { action: CRUD_GET_ONE });\n * // will dispatch the following actions:\n * // - CRUD_GET_ONE\n * // - CRUD_GET_ONE_LOADING\n * // - FETCH_START\n * // - CRUD_GET_ONE_SUCCESS\n * // - FETCH_END\n */\nvar useDataProvider = function () {\n    var dispatch = useDispatch();\n    var dataProvider = useContext(DataProviderContext) || defaultDataProvider;\n    var isOptimistic = useSelector(function (state) { return state.admin.ui.optimistic; });\n    var logoutIfAccessDenied = useLogoutIfAccessDenied();\n    var dataProviderProxy = useMemo(function () {\n        return new Proxy(dataProvider, {\n            get: function (target, name) {\n                return function (resource, payload, options) {\n                    var type = name.toString();\n                    var _a = options || {}, _b = _a.action, action = _b === void 0 ? 'CUSTOM_FETCH' : _b, _c = _a.undoable, undoable = _c === void 0 ? false : _c, _d = _a.onSuccess, onSuccess = _d === void 0 ? undefined : _d, _e = _a.onFailure, onFailure = _e === void 0 ? undefined : _e, rest = __rest(_a, [\"action\", \"undoable\", \"onSuccess\", \"onFailure\"]);\n                    if (typeof dataProvider[type] !== 'function') {\n                        throw new Error(\"Unknown dataProvider function: \" + type);\n                    }\n                    if (onSuccess && typeof onSuccess !== 'function') {\n                        throw new Error('The onSuccess option must be a function');\n                    }\n                    if (onFailure && typeof onFailure !== 'function') {\n                        throw new Error('The onFailure option must be a function');\n                    }\n                    if (undoable && !onSuccess) {\n                        throw new Error('You must pass an onSuccess callback calling notify() to use the undoable mode');\n                    }\n                    if (isOptimistic) {\n                        // in optimistic mode, all fetch actions are canceled,\n                        // so the admin uses the store without synchronization\n                        return Promise.resolve();\n                    }\n                    var params = {\n                        type: type,\n                        payload: payload,\n                        resource: resource,\n                        action: action,\n                        rest: rest,\n                        onSuccess: onSuccess,\n                        onFailure: onFailure,\n                        dataProvider: dataProvider,\n                        dispatch: dispatch,\n                        logoutIfAccessDenied: logoutIfAccessDenied,\n                    };\n                    return undoable\n                        ? performUndoableQuery(params)\n                        : performQuery(params);\n                };\n            },\n        });\n    }, [dataProvider, dispatch, isOptimistic, logoutIfAccessDenied]);\n    return dataProviderProxy;\n};\n/**\n * In undoable mode, the hook dispatches an optimistic action and executes\n * the success side effects right away. Then it waits for a few seconds to\n * actually call the dataProvider - unless the user dispatches an Undo action.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\nvar performUndoableQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied;\n    dispatch(startOptimisticMode());\n    if (window) {\n        window.addEventListener('beforeunload', warnBeforeClosingWindow);\n    }\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({\n        type: action + \"_OPTIMISTIC\",\n        payload: payload,\n        meta: {\n            resource: resource,\n            fetch: getFetchType(type),\n            optimistic: true,\n        },\n    });\n    onSuccess && onSuccess({});\n    undoableEventEmitter.once('end', function (_a) {\n        var isUndo = _a.isUndo;\n        dispatch(stopOptimisticMode());\n        if (isUndo) {\n            dispatch(showNotification('ra.notification.canceled'));\n            dispatch(refreshView());\n            if (window) {\n                window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n            }\n            return;\n        }\n        dispatch({\n            type: action + \"_LOADING\",\n            payload: payload,\n            meta: __assign({ resource: resource }, rest),\n        });\n        dispatch({ type: FETCH_START });\n        dataProvider[type](resource, payload)\n            .then(function (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                validateResponseFormat(response, type);\n            }\n            dispatch({\n                type: action + \"_SUCCESS\",\n                payload: response,\n                requestPayload: payload,\n                meta: __assign({}, rest, { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END }),\n            });\n            dispatch({ type: FETCH_END });\n            if (window) {\n                window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n            }\n            dispatch(refreshView());\n        })\n            .catch(function (error) {\n            if (window) {\n                window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(error);\n            }\n            return logoutIfAccessDenied(error).then(function (loggedOut) {\n                if (loggedOut)\n                    return;\n                dispatch({\n                    type: action + \"_FAILURE\",\n                    error: error.message ? error.message : error,\n                    payload: error.body ? error.body : null,\n                    requestPayload: payload,\n                    meta: __assign({}, rest, { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_ERROR }),\n                });\n                dispatch({ type: FETCH_ERROR, error: error });\n                onFailure && onFailure(error);\n                throw error;\n            });\n        });\n    });\n    return Promise.resolve({});\n};\n// event listener added as window.onbeforeunload when starting optimistic mode, and removed when it ends\nvar warnBeforeClosingWindow = function (event) {\n    event.preventDefault(); // standard\n    event.returnValue = ''; // Chrome\n    return 'Your latest modifications are not yet sent to the server. Are you sure?'; // Old IE\n};\n/**\n * In normal mode, the hook calls the dataProvider. When a successful response\n * arrives, the hook dispatches a SUCCESS action, executes success side effects\n * and returns the response. If the response is an error, the hook dispatches\n * a FAILURE action, executes failure side effects, and throws an error.\n */\nvar performQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied;\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({\n        type: action + \"_LOADING\",\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({ type: FETCH_START });\n    return dataProvider[type](resource, payload)\n        .then(function (response) {\n        if (process.env.NODE_ENV !== 'production') {\n            validateResponseFormat(response, type);\n        }\n        dispatch({\n            type: action + \"_SUCCESS\",\n            payload: response,\n            requestPayload: payload,\n            meta: __assign({}, rest, { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END }),\n        });\n        dispatch({ type: FETCH_END });\n        onSuccess && onSuccess(response);\n        return response;\n    })\n        .catch(function (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(error);\n        }\n        return logoutIfAccessDenied(error).then(function (loggedOut) {\n            if (loggedOut)\n                return;\n            dispatch({\n                type: action + \"_FAILURE\",\n                error: error.message ? error.message : error,\n                payload: error.body ? error.body : null,\n                requestPayload: payload,\n                meta: __assign({}, rest, { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_ERROR }),\n            });\n            dispatch({ type: FETCH_ERROR, error: error });\n            onFailure && onFailure(error);\n            throw error;\n        });\n    });\n};\nexport default useDataProvider;\n"]},"metadata":{},"sourceType":"module"}