{"ast":null,"code":"import uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_CREATE_SUCCESS } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../core';\n\nvar idsReducer = function (previousState, action) {\n  if (previousState === void 0) {\n    previousState = [];\n  }\n\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === DELETE) {\n      var index = previousState.map(function (el) {\n        return el === action.payload.id;\n      }) // eslint-disable-line eqeqeq\n      .indexOf(true);\n\n      if (index === -1) {\n        return previousState;\n      }\n\n      return previousState.slice(0, index).concat(previousState.slice(index + 1));\n    }\n\n    if (action.meta.fetch === DELETE_MANY) {\n      var newState = previousState.filter(function (el) {\n        return !action.payload.ids.includes(el);\n      });\n      return newState;\n    }\n  }\n\n  switch (action.type) {\n    case CRUD_GET_LIST_SUCCESS:\n      return action.payload.data.map(function (_a) {\n        var id = _a.id;\n        return id;\n      });\n\n    case CRUD_CREATE_SUCCESS:\n      return uniq([action.payload.data.id].concat(previousState));\n\n    default:\n      return previousState;\n  }\n};\n\nexport default idsReducer;\nexport var getIds = function (state) {\n  return state;\n};","map":{"version":3,"sources":["/home/ubuntu/truck-rewards/node_modules/ra-core/esm/reducer/admin/resource/list/ids.js"],"names":["uniq","CRUD_GET_LIST_SUCCESS","CRUD_CREATE_SUCCESS","DELETE","DELETE_MANY","idsReducer","previousState","action","meta","optimistic","fetch","index","map","el","payload","id","indexOf","slice","concat","newState","filter","ids","includes","type","data","_a","getIds","state"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA4D,qBAA5D;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,kBAApC;;AACA,IAAIC,UAAU,GAAG,UAAUC,aAAV,EAAyBC,MAAzB,EAAiC;AAC9C,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAG,EAAhB;AAAqB;;AACrD,MAAIC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,UAA/B,EAA2C;AACvC,QAAIF,MAAM,CAACC,IAAP,CAAYE,KAAZ,KAAsBP,MAA1B,EAAkC;AAC9B,UAAIQ,KAAK,GAAGL,aAAa,CACpBM,GADO,CACH,UAAUC,EAAV,EAAc;AAAE,eAAOA,EAAE,KAAKN,MAAM,CAACO,OAAP,CAAeC,EAA7B;AAAkC,OAD/C,EACiD;AADjD,OAEPC,OAFO,CAEC,IAFD,CAAZ;;AAGA,UAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,eAAOL,aAAP;AACH;;AACD,aAAOA,aAAa,CAACW,KAAd,CAAoB,CAApB,EAAuBN,KAAvB,EAA8BO,MAA9B,CAAqCZ,aAAa,CAACW,KAAd,CAAoBN,KAAK,GAAG,CAA5B,CAArC,CAAP;AACH;;AACD,QAAIJ,MAAM,CAACC,IAAP,CAAYE,KAAZ,KAAsBN,WAA1B,EAAuC;AACnC,UAAIe,QAAQ,GAAGb,aAAa,CAACc,MAAd,CAAqB,UAAUP,EAAV,EAAc;AAAE,eAAO,CAACN,MAAM,CAACO,OAAP,CAAeO,GAAf,CAAmBC,QAAnB,CAA4BT,EAA5B,CAAR;AAA0C,OAA/E,CAAf;AACA,aAAOM,QAAP;AACH;AACJ;;AACD,UAAQZ,MAAM,CAACgB,IAAf;AACI,SAAKtB,qBAAL;AACI,aAAOM,MAAM,CAACO,OAAP,CAAeU,IAAf,CAAoBZ,GAApB,CAAwB,UAAUa,EAAV,EAAc;AACzC,YAAIV,EAAE,GAAGU,EAAE,CAACV,EAAZ;AACA,eAAOA,EAAP;AACH,OAHM,CAAP;;AAIJ,SAAKb,mBAAL;AACI,aAAOF,IAAI,CAAC,CAACO,MAAM,CAACO,OAAP,CAAeU,IAAf,CAAoBT,EAArB,EAAyBG,MAAzB,CAAgCZ,aAAhC,CAAD,CAAX;;AACJ;AACI,aAAOA,aAAP;AATR;AAWH,CA5BD;;AA6BA,eAAeD,UAAf;AACA,OAAO,IAAIqB,MAAM,GAAG,UAAUC,KAAV,EAAiB;AAAE,SAAOA,KAAP;AAAe,CAA/C","sourcesContent":["import uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_CREATE_SUCCESS, } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../core';\nvar idsReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = []; }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === DELETE) {\n            var index = previousState\n                .map(function (el) { return el === action.payload.id; }) // eslint-disable-line eqeqeq\n                .indexOf(true);\n            if (index === -1) {\n                return previousState;\n            }\n            return previousState.slice(0, index).concat(previousState.slice(index + 1));\n        }\n        if (action.meta.fetch === DELETE_MANY) {\n            var newState = previousState.filter(function (el) { return !action.payload.ids.includes(el); });\n            return newState;\n        }\n    }\n    switch (action.type) {\n        case CRUD_GET_LIST_SUCCESS:\n            return action.payload.data.map(function (_a) {\n                var id = _a.id;\n                return id;\n            });\n        case CRUD_CREATE_SUCCESS:\n            return uniq([action.payload.data.id].concat(previousState));\n        default:\n            return previousState;\n    }\n};\nexport default idsReducer;\nexport var getIds = function (state) { return state; };\n"]},"metadata":{},"sourceType":"module"}